{"ast":null,"code":"// Generated by LiveScript 1.4.0\nvar each,\n    map,\n    compact,\n    filter,\n    reject,\n    partition,\n    find,\n    head,\n    first,\n    tail,\n    last,\n    initial,\n    empty,\n    reverse,\n    unique,\n    uniqueBy,\n    fold,\n    foldl,\n    fold1,\n    foldl1,\n    foldr,\n    foldr1,\n    unfoldr,\n    concat,\n    concatMap,\n    flatten,\n    difference,\n    intersection,\n    union,\n    countBy,\n    groupBy,\n    andList,\n    orList,\n    any,\n    all,\n    sort,\n    sortWith,\n    sortBy,\n    sum,\n    product,\n    mean,\n    average,\n    maximum,\n    minimum,\n    maximumBy,\n    minimumBy,\n    scan,\n    scanl,\n    scan1,\n    scanl1,\n    scanr,\n    scanr1,\n    slice,\n    take,\n    drop,\n    splitAt,\n    takeWhile,\n    dropWhile,\n    span,\n    breakList,\n    zip,\n    zipWith,\n    zipAll,\n    zipAllWith,\n    at,\n    elemIndex,\n    elemIndices,\n    findIndex,\n    findIndices,\n    toString$ = {}.toString,\n    slice$ = [].slice;\neach = curry$(function (f, xs) {\n  var i$, len$, x;\n\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    f(x);\n  }\n\n  return xs;\n});\nmap = curry$(function (f, xs) {\n  var i$,\n      len$,\n      x,\n      results$ = [];\n\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    results$.push(f(x));\n  }\n\n  return results$;\n});\n\ncompact = function (xs) {\n  var i$,\n      len$,\n      x,\n      results$ = [];\n\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n\n    if (x) {\n      results$.push(x);\n    }\n  }\n\n  return results$;\n};\n\nfilter = curry$(function (f, xs) {\n  var i$,\n      len$,\n      x,\n      results$ = [];\n\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n\n    if (f(x)) {\n      results$.push(x);\n    }\n  }\n\n  return results$;\n});\nreject = curry$(function (f, xs) {\n  var i$,\n      len$,\n      x,\n      results$ = [];\n\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n\n    if (!f(x)) {\n      results$.push(x);\n    }\n  }\n\n  return results$;\n});\npartition = curry$(function (f, xs) {\n  var passed, failed, i$, len$, x;\n  passed = [];\n  failed = [];\n\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    (f(x) ? passed : failed).push(x);\n  }\n\n  return [passed, failed];\n});\nfind = curry$(function (f, xs) {\n  var i$, len$, x;\n\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n\n    if (f(x)) {\n      return x;\n    }\n  }\n});\n\nhead = first = function (xs) {\n  return xs[0];\n};\n\ntail = function (xs) {\n  if (!xs.length) {\n    return;\n  }\n\n  return xs.slice(1);\n};\n\nlast = function (xs) {\n  return xs[xs.length - 1];\n};\n\ninitial = function (xs) {\n  if (!xs.length) {\n    return;\n  }\n\n  return xs.slice(0, -1);\n};\n\nempty = function (xs) {\n  return !xs.length;\n};\n\nreverse = function (xs) {\n  return xs.concat().reverse();\n};\n\nunique = function (xs) {\n  var result, i$, len$, x;\n  result = [];\n\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n\n    if (!in$(x, result)) {\n      result.push(x);\n    }\n  }\n\n  return result;\n};\n\nuniqueBy = curry$(function (f, xs) {\n  var seen,\n      i$,\n      len$,\n      x,\n      val,\n      results$ = [];\n  seen = [];\n\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    val = f(x);\n\n    if (in$(val, seen)) {\n      continue;\n    }\n\n    seen.push(val);\n    results$.push(x);\n  }\n\n  return results$;\n});\nfold = foldl = curry$(function (f, memo, xs) {\n  var i$, len$, x;\n\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    memo = f(memo, x);\n  }\n\n  return memo;\n});\nfold1 = foldl1 = curry$(function (f, xs) {\n  return fold(f, xs[0], xs.slice(1));\n});\nfoldr = curry$(function (f, memo, xs) {\n  var i$, x;\n\n  for (i$ = xs.length - 1; i$ >= 0; --i$) {\n    x = xs[i$];\n    memo = f(x, memo);\n  }\n\n  return memo;\n});\nfoldr1 = curry$(function (f, xs) {\n  return foldr(f, xs[xs.length - 1], xs.slice(0, -1));\n});\nunfoldr = curry$(function (f, b) {\n  var result, x, that;\n  result = [];\n  x = b;\n\n  while ((that = f(x)) != null) {\n    result.push(that[0]);\n    x = that[1];\n  }\n\n  return result;\n});\n\nconcat = function (xss) {\n  return [].concat.apply([], xss);\n};\n\nconcatMap = curry$(function (f, xs) {\n  var x;\n  return [].concat.apply([], function () {\n    var i$,\n        ref$,\n        len$,\n        results$ = [];\n\n    for (i$ = 0, len$ = (ref$ = xs).length; i$ < len$; ++i$) {\n      x = ref$[i$];\n      results$.push(f(x));\n    }\n\n    return results$;\n  }());\n});\n\nflatten = function (xs) {\n  var x;\n  return [].concat.apply([], function () {\n    var i$,\n        ref$,\n        len$,\n        results$ = [];\n\n    for (i$ = 0, len$ = (ref$ = xs).length; i$ < len$; ++i$) {\n      x = ref$[i$];\n\n      if (toString$.call(x).slice(8, -1) === 'Array') {\n        results$.push(flatten(x));\n      } else {\n        results$.push(x);\n      }\n    }\n\n    return results$;\n  }());\n};\n\ndifference = function (xs) {\n  var yss, results, i$, len$, x, j$, len1$, ys;\n  yss = slice$.call(arguments, 1);\n  results = [];\n\n  outer: for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n\n    for (j$ = 0, len1$ = yss.length; j$ < len1$; ++j$) {\n      ys = yss[j$];\n\n      if (in$(x, ys)) {\n        continue outer;\n      }\n    }\n\n    results.push(x);\n  }\n\n  return results;\n};\n\nintersection = function (xs) {\n  var yss, results, i$, len$, x, j$, len1$, ys;\n  yss = slice$.call(arguments, 1);\n  results = [];\n\n  outer: for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n\n    for (j$ = 0, len1$ = yss.length; j$ < len1$; ++j$) {\n      ys = yss[j$];\n\n      if (!in$(x, ys)) {\n        continue outer;\n      }\n    }\n\n    results.push(x);\n  }\n\n  return results;\n};\n\nunion = function () {\n  var xss, results, i$, len$, xs, j$, len1$, x;\n  xss = slice$.call(arguments);\n  results = [];\n\n  for (i$ = 0, len$ = xss.length; i$ < len$; ++i$) {\n    xs = xss[i$];\n\n    for (j$ = 0, len1$ = xs.length; j$ < len1$; ++j$) {\n      x = xs[j$];\n\n      if (!in$(x, results)) {\n        results.push(x);\n      }\n    }\n  }\n\n  return results;\n};\n\ncountBy = curry$(function (f, xs) {\n  var results, i$, len$, x, key;\n  results = {};\n\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    key = f(x);\n\n    if (key in results) {\n      results[key] += 1;\n    } else {\n      results[key] = 1;\n    }\n  }\n\n  return results;\n});\ngroupBy = curry$(function (f, xs) {\n  var results, i$, len$, x, key;\n  results = {};\n\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    key = f(x);\n\n    if (key in results) {\n      results[key].push(x);\n    } else {\n      results[key] = [x];\n    }\n  }\n\n  return results;\n});\n\nandList = function (xs) {\n  var i$, len$, x;\n\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n\n    if (!x) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\norList = function (xs) {\n  var i$, len$, x;\n\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n\n    if (x) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nany = curry$(function (f, xs) {\n  var i$, len$, x;\n\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n\n    if (f(x)) {\n      return true;\n    }\n  }\n\n  return false;\n});\nall = curry$(function (f, xs) {\n  var i$, len$, x;\n\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n\n    if (!f(x)) {\n      return false;\n    }\n  }\n\n  return true;\n});\n\nsort = function (xs) {\n  return xs.concat().sort(function (x, y) {\n    if (x > y) {\n      return 1;\n    } else if (x < y) {\n      return -1;\n    } else {\n      return 0;\n    }\n  });\n};\n\nsortWith = curry$(function (f, xs) {\n  return xs.concat().sort(f);\n});\nsortBy = curry$(function (f, xs) {\n  return xs.concat().sort(function (x, y) {\n    if (f(x) > f(y)) {\n      return 1;\n    } else if (f(x) < f(y)) {\n      return -1;\n    } else {\n      return 0;\n    }\n  });\n});\n\nsum = function (xs) {\n  var result, i$, len$, x;\n  result = 0;\n\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    result += x;\n  }\n\n  return result;\n};\n\nproduct = function (xs) {\n  var result, i$, len$, x;\n  result = 1;\n\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    result *= x;\n  }\n\n  return result;\n};\n\nmean = average = function (xs) {\n  var sum, i$, len$, x;\n  sum = 0;\n\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    sum += x;\n  }\n\n  return sum / xs.length;\n};\n\nmaximum = function (xs) {\n  var max, i$, ref$, len$, x;\n  max = xs[0];\n\n  for (i$ = 0, len$ = (ref$ = xs.slice(1)).length; i$ < len$; ++i$) {\n    x = ref$[i$];\n\n    if (x > max) {\n      max = x;\n    }\n  }\n\n  return max;\n};\n\nminimum = function (xs) {\n  var min, i$, ref$, len$, x;\n  min = xs[0];\n\n  for (i$ = 0, len$ = (ref$ = xs.slice(1)).length; i$ < len$; ++i$) {\n    x = ref$[i$];\n\n    if (x < min) {\n      min = x;\n    }\n  }\n\n  return min;\n};\n\nmaximumBy = curry$(function (f, xs) {\n  var max, i$, ref$, len$, x;\n  max = xs[0];\n\n  for (i$ = 0, len$ = (ref$ = xs.slice(1)).length; i$ < len$; ++i$) {\n    x = ref$[i$];\n\n    if (f(x) > f(max)) {\n      max = x;\n    }\n  }\n\n  return max;\n});\nminimumBy = curry$(function (f, xs) {\n  var min, i$, ref$, len$, x;\n  min = xs[0];\n\n  for (i$ = 0, len$ = (ref$ = xs.slice(1)).length; i$ < len$; ++i$) {\n    x = ref$[i$];\n\n    if (f(x) < f(min)) {\n      min = x;\n    }\n  }\n\n  return min;\n});\nscan = scanl = curry$(function (f, memo, xs) {\n  var last, x;\n  last = memo;\n  return [memo].concat(function () {\n    var i$,\n        ref$,\n        len$,\n        results$ = [];\n\n    for (i$ = 0, len$ = (ref$ = xs).length; i$ < len$; ++i$) {\n      x = ref$[i$];\n      results$.push(last = f(last, x));\n    }\n\n    return results$;\n  }());\n});\nscan1 = scanl1 = curry$(function (f, xs) {\n  if (!xs.length) {\n    return;\n  }\n\n  return scan(f, xs[0], xs.slice(1));\n});\nscanr = curry$(function (f, memo, xs) {\n  xs = xs.concat().reverse();\n  return scan(f, memo, xs).reverse();\n});\nscanr1 = curry$(function (f, xs) {\n  if (!xs.length) {\n    return;\n  }\n\n  xs = xs.concat().reverse();\n  return scan(f, xs[0], xs.slice(1)).reverse();\n});\nslice = curry$(function (x, y, xs) {\n  return xs.slice(x, y);\n});\ntake = curry$(function (n, xs) {\n  if (n <= 0) {\n    return xs.slice(0, 0);\n  } else {\n    return xs.slice(0, n);\n  }\n});\ndrop = curry$(function (n, xs) {\n  if (n <= 0) {\n    return xs;\n  } else {\n    return xs.slice(n);\n  }\n});\nsplitAt = curry$(function (n, xs) {\n  return [take(n, xs), drop(n, xs)];\n});\ntakeWhile = curry$(function (p, xs) {\n  var len, i;\n  len = xs.length;\n\n  if (!len) {\n    return xs;\n  }\n\n  i = 0;\n\n  while (i < len && p(xs[i])) {\n    i += 1;\n  }\n\n  return xs.slice(0, i);\n});\ndropWhile = curry$(function (p, xs) {\n  var len, i;\n  len = xs.length;\n\n  if (!len) {\n    return xs;\n  }\n\n  i = 0;\n\n  while (i < len && p(xs[i])) {\n    i += 1;\n  }\n\n  return xs.slice(i);\n});\nspan = curry$(function (p, xs) {\n  return [takeWhile(p, xs), dropWhile(p, xs)];\n});\nbreakList = curry$(function (p, xs) {\n  return span(compose$(p, not$), xs);\n});\nzip = curry$(function (xs, ys) {\n  var result, len, i$, len$, i, x;\n  result = [];\n  len = ys.length;\n\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    i = i$;\n    x = xs[i$];\n\n    if (i === len) {\n      break;\n    }\n\n    result.push([x, ys[i]]);\n  }\n\n  return result;\n});\nzipWith = curry$(function (f, xs, ys) {\n  var result, len, i$, len$, i, x;\n  result = [];\n  len = ys.length;\n\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    i = i$;\n    x = xs[i$];\n\n    if (i === len) {\n      break;\n    }\n\n    result.push(f(x, ys[i]));\n  }\n\n  return result;\n});\n\nzipAll = function () {\n  var xss,\n      minLength,\n      i$,\n      len$,\n      xs,\n      ref$,\n      i,\n      lresult$,\n      j$,\n      results$ = [];\n  xss = slice$.call(arguments);\n  minLength = undefined;\n\n  for (i$ = 0, len$ = xss.length; i$ < len$; ++i$) {\n    xs = xss[i$];\n    minLength <= (ref$ = xs.length) || (minLength = ref$);\n  }\n\n  for (i$ = 0; i$ < minLength; ++i$) {\n    i = i$;\n    lresult$ = [];\n\n    for (j$ = 0, len$ = xss.length; j$ < len$; ++j$) {\n      xs = xss[j$];\n      lresult$.push(xs[i]);\n    }\n\n    results$.push(lresult$);\n  }\n\n  return results$;\n};\n\nzipAllWith = function (f) {\n  var xss,\n      minLength,\n      i$,\n      len$,\n      xs,\n      ref$,\n      i,\n      results$ = [];\n  xss = slice$.call(arguments, 1);\n  minLength = undefined;\n\n  for (i$ = 0, len$ = xss.length; i$ < len$; ++i$) {\n    xs = xss[i$];\n    minLength <= (ref$ = xs.length) || (minLength = ref$);\n  }\n\n  for (i$ = 0; i$ < minLength; ++i$) {\n    i = i$;\n    results$.push(f.apply(null, fn$()));\n  }\n\n  return results$;\n\n  function fn$() {\n    var i$,\n        ref$,\n        len$,\n        results$ = [];\n\n    for (i$ = 0, len$ = (ref$ = xss).length; i$ < len$; ++i$) {\n      xs = ref$[i$];\n      results$.push(xs[i]);\n    }\n\n    return results$;\n  }\n};\n\nat = curry$(function (n, xs) {\n  if (n < 0) {\n    return xs[xs.length + n];\n  } else {\n    return xs[n];\n  }\n});\nelemIndex = curry$(function (el, xs) {\n  var i$, len$, i, x;\n\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    i = i$;\n    x = xs[i$];\n\n    if (x === el) {\n      return i;\n    }\n  }\n});\nelemIndices = curry$(function (el, xs) {\n  var i$,\n      len$,\n      i,\n      x,\n      results$ = [];\n\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    i = i$;\n    x = xs[i$];\n\n    if (x === el) {\n      results$.push(i);\n    }\n  }\n\n  return results$;\n});\nfindIndex = curry$(function (f, xs) {\n  var i$, len$, i, x;\n\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    i = i$;\n    x = xs[i$];\n\n    if (f(x)) {\n      return i;\n    }\n  }\n});\nfindIndices = curry$(function (f, xs) {\n  var i$,\n      len$,\n      i,\n      x,\n      results$ = [];\n\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    i = i$;\n    x = xs[i$];\n\n    if (f(x)) {\n      results$.push(i);\n    }\n  }\n\n  return results$;\n});\nmodule.exports = {\n  each: each,\n  map: map,\n  filter: filter,\n  compact: compact,\n  reject: reject,\n  partition: partition,\n  find: find,\n  head: head,\n  first: first,\n  tail: tail,\n  last: last,\n  initial: initial,\n  empty: empty,\n  reverse: reverse,\n  difference: difference,\n  intersection: intersection,\n  union: union,\n  countBy: countBy,\n  groupBy: groupBy,\n  fold: fold,\n  fold1: fold1,\n  foldl: foldl,\n  foldl1: foldl1,\n  foldr: foldr,\n  foldr1: foldr1,\n  unfoldr: unfoldr,\n  andList: andList,\n  orList: orList,\n  any: any,\n  all: all,\n  unique: unique,\n  uniqueBy: uniqueBy,\n  sort: sort,\n  sortWith: sortWith,\n  sortBy: sortBy,\n  sum: sum,\n  product: product,\n  mean: mean,\n  average: average,\n  concat: concat,\n  concatMap: concatMap,\n  flatten: flatten,\n  maximum: maximum,\n  minimum: minimum,\n  maximumBy: maximumBy,\n  minimumBy: minimumBy,\n  scan: scan,\n  scan1: scan1,\n  scanl: scanl,\n  scanl1: scanl1,\n  scanr: scanr,\n  scanr1: scanr1,\n  slice: slice,\n  take: take,\n  drop: drop,\n  splitAt: splitAt,\n  takeWhile: takeWhile,\n  dropWhile: dropWhile,\n  span: span,\n  breakList: breakList,\n  zip: zip,\n  zipWith: zipWith,\n  zipAll: zipAll,\n  zipAllWith: zipAllWith,\n  at: at,\n  elemIndex: elemIndex,\n  elemIndices: elemIndices,\n  findIndex: findIndex,\n  findIndices: findIndices\n};\n\nfunction curry$(f, bound) {\n  var context,\n      _curry = function (args) {\n    return f.length > 1 ? function () {\n      var params = args ? args.concat() : [];\n      context = bound ? context || this : this;\n      return params.push.apply(params, arguments) < f.length && arguments.length ? _curry.call(context, params) : f.apply(context, params);\n    } : f;\n  };\n\n  return _curry();\n}\n\nfunction in$(x, xs) {\n  var i = -1,\n      l = xs.length >>> 0;\n\n  while (++i < l) if (x === xs[i]) return true;\n\n  return false;\n}\n\nfunction compose$() {\n  var functions = arguments;\n  return function () {\n    var i, result;\n    result = functions[0].apply(this, arguments);\n\n    for (i = 1; i < functions.length; ++i) {\n      result = functions[i](result);\n    }\n\n    return result;\n  };\n}\n\nfunction not$(x) {\n  return !x;\n}","map":{"version":3,"sources":["/Users/sparshsingh/Desktop/college-app/node_modules/prelude-ls/lib/List.js"],"names":["each","map","compact","filter","reject","partition","find","head","first","tail","last","initial","empty","reverse","unique","uniqueBy","fold","foldl","fold1","foldl1","foldr","foldr1","unfoldr","concat","concatMap","flatten","difference","intersection","union","countBy","groupBy","andList","orList","any","all","sort","sortWith","sortBy","sum","product","mean","average","maximum","minimum","maximumBy","minimumBy","scan","scanl","scan1","scanl1","scanr","scanr1","slice","take","drop","splitAt","takeWhile","dropWhile","span","breakList","zip","zipWith","zipAll","zipAllWith","at","elemIndex","elemIndices","findIndex","findIndices","toString$","toString","slice$","curry$","f","xs","i$","len$","x","length","results$","push","passed","failed","result","in$","seen","val","memo","b","that","xss","apply","ref$","call","yss","results","j$","len1$","ys","arguments","outer","key","y","max","min","n","p","len","i","compose$","not$","minLength","lresult$","undefined","fn$","el","module","exports","bound","context","_curry","args","params","l","functions"],"mappings":"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","sourcesContent":["// Generated by LiveScript 1.4.0\nvar each, map, compact, filter, reject, partition, find, head, first, tail, last, initial, empty, reverse, unique, uniqueBy, fold, foldl, fold1, foldl1, foldr, foldr1, unfoldr, concat, concatMap, flatten, difference, intersection, union, countBy, groupBy, andList, orList, any, all, sort, sortWith, sortBy, sum, product, mean, average, maximum, minimum, maximumBy, minimumBy, scan, scanl, scan1, scanl1, scanr, scanr1, slice, take, drop, splitAt, takeWhile, dropWhile, span, breakList, zip, zipWith, zipAll, zipAllWith, at, elemIndex, elemIndices, findIndex, findIndices, toString$ = {}.toString, slice$ = [].slice;\neach = curry$(function(f, xs){\n  var i$, len$, x;\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    f(x);\n  }\n  return xs;\n});\nmap = curry$(function(f, xs){\n  var i$, len$, x, results$ = [];\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    results$.push(f(x));\n  }\n  return results$;\n});\ncompact = function(xs){\n  var i$, len$, x, results$ = [];\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    if (x) {\n      results$.push(x);\n    }\n  }\n  return results$;\n};\nfilter = curry$(function(f, xs){\n  var i$, len$, x, results$ = [];\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    if (f(x)) {\n      results$.push(x);\n    }\n  }\n  return results$;\n});\nreject = curry$(function(f, xs){\n  var i$, len$, x, results$ = [];\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    if (!f(x)) {\n      results$.push(x);\n    }\n  }\n  return results$;\n});\npartition = curry$(function(f, xs){\n  var passed, failed, i$, len$, x;\n  passed = [];\n  failed = [];\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    (f(x) ? passed : failed).push(x);\n  }\n  return [passed, failed];\n});\nfind = curry$(function(f, xs){\n  var i$, len$, x;\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    if (f(x)) {\n      return x;\n    }\n  }\n});\nhead = first = function(xs){\n  return xs[0];\n};\ntail = function(xs){\n  if (!xs.length) {\n    return;\n  }\n  return xs.slice(1);\n};\nlast = function(xs){\n  return xs[xs.length - 1];\n};\ninitial = function(xs){\n  if (!xs.length) {\n    return;\n  }\n  return xs.slice(0, -1);\n};\nempty = function(xs){\n  return !xs.length;\n};\nreverse = function(xs){\n  return xs.concat().reverse();\n};\nunique = function(xs){\n  var result, i$, len$, x;\n  result = [];\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    if (!in$(x, result)) {\n      result.push(x);\n    }\n  }\n  return result;\n};\nuniqueBy = curry$(function(f, xs){\n  var seen, i$, len$, x, val, results$ = [];\n  seen = [];\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    val = f(x);\n    if (in$(val, seen)) {\n      continue;\n    }\n    seen.push(val);\n    results$.push(x);\n  }\n  return results$;\n});\nfold = foldl = curry$(function(f, memo, xs){\n  var i$, len$, x;\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    memo = f(memo, x);\n  }\n  return memo;\n});\nfold1 = foldl1 = curry$(function(f, xs){\n  return fold(f, xs[0], xs.slice(1));\n});\nfoldr = curry$(function(f, memo, xs){\n  var i$, x;\n  for (i$ = xs.length - 1; i$ >= 0; --i$) {\n    x = xs[i$];\n    memo = f(x, memo);\n  }\n  return memo;\n});\nfoldr1 = curry$(function(f, xs){\n  return foldr(f, xs[xs.length - 1], xs.slice(0, -1));\n});\nunfoldr = curry$(function(f, b){\n  var result, x, that;\n  result = [];\n  x = b;\n  while ((that = f(x)) != null) {\n    result.push(that[0]);\n    x = that[1];\n  }\n  return result;\n});\nconcat = function(xss){\n  return [].concat.apply([], xss);\n};\nconcatMap = curry$(function(f, xs){\n  var x;\n  return [].concat.apply([], (function(){\n    var i$, ref$, len$, results$ = [];\n    for (i$ = 0, len$ = (ref$ = xs).length; i$ < len$; ++i$) {\n      x = ref$[i$];\n      results$.push(f(x));\n    }\n    return results$;\n  }()));\n});\nflatten = function(xs){\n  var x;\n  return [].concat.apply([], (function(){\n    var i$, ref$, len$, results$ = [];\n    for (i$ = 0, len$ = (ref$ = xs).length; i$ < len$; ++i$) {\n      x = ref$[i$];\n      if (toString$.call(x).slice(8, -1) === 'Array') {\n        results$.push(flatten(x));\n      } else {\n        results$.push(x);\n      }\n    }\n    return results$;\n  }()));\n};\ndifference = function(xs){\n  var yss, results, i$, len$, x, j$, len1$, ys;\n  yss = slice$.call(arguments, 1);\n  results = [];\n  outer: for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    for (j$ = 0, len1$ = yss.length; j$ < len1$; ++j$) {\n      ys = yss[j$];\n      if (in$(x, ys)) {\n        continue outer;\n      }\n    }\n    results.push(x);\n  }\n  return results;\n};\nintersection = function(xs){\n  var yss, results, i$, len$, x, j$, len1$, ys;\n  yss = slice$.call(arguments, 1);\n  results = [];\n  outer: for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    for (j$ = 0, len1$ = yss.length; j$ < len1$; ++j$) {\n      ys = yss[j$];\n      if (!in$(x, ys)) {\n        continue outer;\n      }\n    }\n    results.push(x);\n  }\n  return results;\n};\nunion = function(){\n  var xss, results, i$, len$, xs, j$, len1$, x;\n  xss = slice$.call(arguments);\n  results = [];\n  for (i$ = 0, len$ = xss.length; i$ < len$; ++i$) {\n    xs = xss[i$];\n    for (j$ = 0, len1$ = xs.length; j$ < len1$; ++j$) {\n      x = xs[j$];\n      if (!in$(x, results)) {\n        results.push(x);\n      }\n    }\n  }\n  return results;\n};\ncountBy = curry$(function(f, xs){\n  var results, i$, len$, x, key;\n  results = {};\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    key = f(x);\n    if (key in results) {\n      results[key] += 1;\n    } else {\n      results[key] = 1;\n    }\n  }\n  return results;\n});\ngroupBy = curry$(function(f, xs){\n  var results, i$, len$, x, key;\n  results = {};\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    key = f(x);\n    if (key in results) {\n      results[key].push(x);\n    } else {\n      results[key] = [x];\n    }\n  }\n  return results;\n});\nandList = function(xs){\n  var i$, len$, x;\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    if (!x) {\n      return false;\n    }\n  }\n  return true;\n};\norList = function(xs){\n  var i$, len$, x;\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    if (x) {\n      return true;\n    }\n  }\n  return false;\n};\nany = curry$(function(f, xs){\n  var i$, len$, x;\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    if (f(x)) {\n      return true;\n    }\n  }\n  return false;\n});\nall = curry$(function(f, xs){\n  var i$, len$, x;\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    if (!f(x)) {\n      return false;\n    }\n  }\n  return true;\n});\nsort = function(xs){\n  return xs.concat().sort(function(x, y){\n    if (x > y) {\n      return 1;\n    } else if (x < y) {\n      return -1;\n    } else {\n      return 0;\n    }\n  });\n};\nsortWith = curry$(function(f, xs){\n  return xs.concat().sort(f);\n});\nsortBy = curry$(function(f, xs){\n  return xs.concat().sort(function(x, y){\n    if (f(x) > f(y)) {\n      return 1;\n    } else if (f(x) < f(y)) {\n      return -1;\n    } else {\n      return 0;\n    }\n  });\n});\nsum = function(xs){\n  var result, i$, len$, x;\n  result = 0;\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    result += x;\n  }\n  return result;\n};\nproduct = function(xs){\n  var result, i$, len$, x;\n  result = 1;\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    result *= x;\n  }\n  return result;\n};\nmean = average = function(xs){\n  var sum, i$, len$, x;\n  sum = 0;\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    sum += x;\n  }\n  return sum / xs.length;\n};\nmaximum = function(xs){\n  var max, i$, ref$, len$, x;\n  max = xs[0];\n  for (i$ = 0, len$ = (ref$ = xs.slice(1)).length; i$ < len$; ++i$) {\n    x = ref$[i$];\n    if (x > max) {\n      max = x;\n    }\n  }\n  return max;\n};\nminimum = function(xs){\n  var min, i$, ref$, len$, x;\n  min = xs[0];\n  for (i$ = 0, len$ = (ref$ = xs.slice(1)).length; i$ < len$; ++i$) {\n    x = ref$[i$];\n    if (x < min) {\n      min = x;\n    }\n  }\n  return min;\n};\nmaximumBy = curry$(function(f, xs){\n  var max, i$, ref$, len$, x;\n  max = xs[0];\n  for (i$ = 0, len$ = (ref$ = xs.slice(1)).length; i$ < len$; ++i$) {\n    x = ref$[i$];\n    if (f(x) > f(max)) {\n      max = x;\n    }\n  }\n  return max;\n});\nminimumBy = curry$(function(f, xs){\n  var min, i$, ref$, len$, x;\n  min = xs[0];\n  for (i$ = 0, len$ = (ref$ = xs.slice(1)).length; i$ < len$; ++i$) {\n    x = ref$[i$];\n    if (f(x) < f(min)) {\n      min = x;\n    }\n  }\n  return min;\n});\nscan = scanl = curry$(function(f, memo, xs){\n  var last, x;\n  last = memo;\n  return [memo].concat((function(){\n    var i$, ref$, len$, results$ = [];\n    for (i$ = 0, len$ = (ref$ = xs).length; i$ < len$; ++i$) {\n      x = ref$[i$];\n      results$.push(last = f(last, x));\n    }\n    return results$;\n  }()));\n});\nscan1 = scanl1 = curry$(function(f, xs){\n  if (!xs.length) {\n    return;\n  }\n  return scan(f, xs[0], xs.slice(1));\n});\nscanr = curry$(function(f, memo, xs){\n  xs = xs.concat().reverse();\n  return scan(f, memo, xs).reverse();\n});\nscanr1 = curry$(function(f, xs){\n  if (!xs.length) {\n    return;\n  }\n  xs = xs.concat().reverse();\n  return scan(f, xs[0], xs.slice(1)).reverse();\n});\nslice = curry$(function(x, y, xs){\n  return xs.slice(x, y);\n});\ntake = curry$(function(n, xs){\n  if (n <= 0) {\n    return xs.slice(0, 0);\n  } else {\n    return xs.slice(0, n);\n  }\n});\ndrop = curry$(function(n, xs){\n  if (n <= 0) {\n    return xs;\n  } else {\n    return xs.slice(n);\n  }\n});\nsplitAt = curry$(function(n, xs){\n  return [take(n, xs), drop(n, xs)];\n});\ntakeWhile = curry$(function(p, xs){\n  var len, i;\n  len = xs.length;\n  if (!len) {\n    return xs;\n  }\n  i = 0;\n  while (i < len && p(xs[i])) {\n    i += 1;\n  }\n  return xs.slice(0, i);\n});\ndropWhile = curry$(function(p, xs){\n  var len, i;\n  len = xs.length;\n  if (!len) {\n    return xs;\n  }\n  i = 0;\n  while (i < len && p(xs[i])) {\n    i += 1;\n  }\n  return xs.slice(i);\n});\nspan = curry$(function(p, xs){\n  return [takeWhile(p, xs), dropWhile(p, xs)];\n});\nbreakList = curry$(function(p, xs){\n  return span(compose$(p, not$), xs);\n});\nzip = curry$(function(xs, ys){\n  var result, len, i$, len$, i, x;\n  result = [];\n  len = ys.length;\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    i = i$;\n    x = xs[i$];\n    if (i === len) {\n      break;\n    }\n    result.push([x, ys[i]]);\n  }\n  return result;\n});\nzipWith = curry$(function(f, xs, ys){\n  var result, len, i$, len$, i, x;\n  result = [];\n  len = ys.length;\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    i = i$;\n    x = xs[i$];\n    if (i === len) {\n      break;\n    }\n    result.push(f(x, ys[i]));\n  }\n  return result;\n});\nzipAll = function(){\n  var xss, minLength, i$, len$, xs, ref$, i, lresult$, j$, results$ = [];\n  xss = slice$.call(arguments);\n  minLength = undefined;\n  for (i$ = 0, len$ = xss.length; i$ < len$; ++i$) {\n    xs = xss[i$];\n    minLength <= (ref$ = xs.length) || (minLength = ref$);\n  }\n  for (i$ = 0; i$ < minLength; ++i$) {\n    i = i$;\n    lresult$ = [];\n    for (j$ = 0, len$ = xss.length; j$ < len$; ++j$) {\n      xs = xss[j$];\n      lresult$.push(xs[i]);\n    }\n    results$.push(lresult$);\n  }\n  return results$;\n};\nzipAllWith = function(f){\n  var xss, minLength, i$, len$, xs, ref$, i, results$ = [];\n  xss = slice$.call(arguments, 1);\n  minLength = undefined;\n  for (i$ = 0, len$ = xss.length; i$ < len$; ++i$) {\n    xs = xss[i$];\n    minLength <= (ref$ = xs.length) || (minLength = ref$);\n  }\n  for (i$ = 0; i$ < minLength; ++i$) {\n    i = i$;\n    results$.push(f.apply(null, (fn$())));\n  }\n  return results$;\n  function fn$(){\n    var i$, ref$, len$, results$ = [];\n    for (i$ = 0, len$ = (ref$ = xss).length; i$ < len$; ++i$) {\n      xs = ref$[i$];\n      results$.push(xs[i]);\n    }\n    return results$;\n  }\n};\nat = curry$(function(n, xs){\n  if (n < 0) {\n    return xs[xs.length + n];\n  } else {\n    return xs[n];\n  }\n});\nelemIndex = curry$(function(el, xs){\n  var i$, len$, i, x;\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    i = i$;\n    x = xs[i$];\n    if (x === el) {\n      return i;\n    }\n  }\n});\nelemIndices = curry$(function(el, xs){\n  var i$, len$, i, x, results$ = [];\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    i = i$;\n    x = xs[i$];\n    if (x === el) {\n      results$.push(i);\n    }\n  }\n  return results$;\n});\nfindIndex = curry$(function(f, xs){\n  var i$, len$, i, x;\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    i = i$;\n    x = xs[i$];\n    if (f(x)) {\n      return i;\n    }\n  }\n});\nfindIndices = curry$(function(f, xs){\n  var i$, len$, i, x, results$ = [];\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    i = i$;\n    x = xs[i$];\n    if (f(x)) {\n      results$.push(i);\n    }\n  }\n  return results$;\n});\nmodule.exports = {\n  each: each,\n  map: map,\n  filter: filter,\n  compact: compact,\n  reject: reject,\n  partition: partition,\n  find: find,\n  head: head,\n  first: first,\n  tail: tail,\n  last: last,\n  initial: initial,\n  empty: empty,\n  reverse: reverse,\n  difference: difference,\n  intersection: intersection,\n  union: union,\n  countBy: countBy,\n  groupBy: groupBy,\n  fold: fold,\n  fold1: fold1,\n  foldl: foldl,\n  foldl1: foldl1,\n  foldr: foldr,\n  foldr1: foldr1,\n  unfoldr: unfoldr,\n  andList: andList,\n  orList: orList,\n  any: any,\n  all: all,\n  unique: unique,\n  uniqueBy: uniqueBy,\n  sort: sort,\n  sortWith: sortWith,\n  sortBy: sortBy,\n  sum: sum,\n  product: product,\n  mean: mean,\n  average: average,\n  concat: concat,\n  concatMap: concatMap,\n  flatten: flatten,\n  maximum: maximum,\n  minimum: minimum,\n  maximumBy: maximumBy,\n  minimumBy: minimumBy,\n  scan: scan,\n  scan1: scan1,\n  scanl: scanl,\n  scanl1: scanl1,\n  scanr: scanr,\n  scanr1: scanr1,\n  slice: slice,\n  take: take,\n  drop: drop,\n  splitAt: splitAt,\n  takeWhile: takeWhile,\n  dropWhile: dropWhile,\n  span: span,\n  breakList: breakList,\n  zip: zip,\n  zipWith: zipWith,\n  zipAll: zipAll,\n  zipAllWith: zipAllWith,\n  at: at,\n  elemIndex: elemIndex,\n  elemIndices: elemIndices,\n  findIndex: findIndex,\n  findIndices: findIndices\n};\nfunction curry$(f, bound){\n  var context,\n  _curry = function(args) {\n    return f.length > 1 ? function(){\n      var params = args ? args.concat() : [];\n      context = bound ? context || this : this;\n      return params.push.apply(params, arguments) <\n          f.length && arguments.length ?\n        _curry.call(context, params) : f.apply(context, params);\n    } : f;\n  };\n  return _curry();\n}\nfunction in$(x, xs){\n  var i = -1, l = xs.length >>> 0;\n  while (++i < l) if (x === xs[i]) return true;\n  return false;\n}\nfunction compose$() {\n  var functions = arguments;\n  return function() {\n    var i, result;\n    result = functions[0].apply(this, arguments);\n    for (i = 1; i < functions.length; ++i) {\n      result = functions[i](result);\n    }\n    return result;\n  };\n}\nfunction not$(x){ return !x; }"]},"metadata":{},"sourceType":"script"}